//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.WithholdingTaxSampleDataSource
{
	using System; 

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class Report { }
#else

	public class Report : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		public Report()
		{
			try
			{
				System.Uri resourceUri = new System.Uri("/SeattleSlew_Wireframes.Screens;component/SampleData/WithholdingTaxSampleDataSource/WithholdingTaxSampleDataSource.xaml", System.UriKind.Relative);
				if (System.Windows.Application.GetResourceStream(resourceUri) != null)
				{
					System.Windows.Application.LoadComponent(this, resourceUri);
				}
			}
			catch (System.Exception)
			{
			}
		}

		private RecordCollection _Data = new RecordCollection();

		public RecordCollection Data
		{
			get
			{
				return this._Data;
			}
		}
	}

	public class Record : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _IssueCountryCode = string.Empty;

		public string IssueCountryCode
		{
			get
			{
				return this._IssueCountryCode;
			}

			set
			{
				if (this._IssueCountryCode != value)
				{
					this._IssueCountryCode = value;
					this.OnPropertyChanged("IssueCountryCode");
				}
			}
		}

		private string _DomicileCountryCode = string.Empty;

		public string DomicileCountryCode
		{
			get
			{
				return this._DomicileCountryCode;
			}

			set
			{
				if (this._DomicileCountryCode != value)
				{
					this._DomicileCountryCode = value;
					this.OnPropertyChanged("DomicileCountryCode");
				}
			}
		}

		private double _DividendTaxRate = 0;

		public double DividendTaxRate
		{
			get
			{
				return this._DividendTaxRate;
			}

			set
			{
				if (this._DividendTaxRate != value)
				{
					this._DividendTaxRate = value;
					this.OnPropertyChanged("DividendTaxRate");
				}
			}
		}

		private double _InterestTaxRate = 0;

		public double InterestTaxRate
		{
			get
			{
				return this._InterestTaxRate;
			}

			set
			{
				if (this._InterestTaxRate != value)
				{
					this._InterestTaxRate = value;
					this.OnPropertyChanged("InterestTaxRate");
				}
			}
		}
	}

	public class RecordCollection : System.Collections.ObjectModel.ObservableCollection<Record>
	{ 
	}
#endif
}
