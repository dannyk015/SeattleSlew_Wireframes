//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.securitiesSampleDataSource
{
	using System; 

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class Report { }
#else

	public class Report : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		public Report()
		{
			try
			{
				System.Uri resourceUri = new System.Uri("/SeattleSlew_Wireframes.Screens;component/SampleData/securitiesSampleDataSource/securitiesSampleDataSource.xaml", System.UriKind.Relative);
				if (System.Windows.Application.GetResourceStream(resourceUri) != null)
				{
					System.Windows.Application.LoadComponent(this, resourceUri);
				}
			}
			catch (System.Exception)
			{
			}
		}

		private RecordCollection _Data = new RecordCollection();

		public RecordCollection Data
		{
			get
			{
				return this._Data;
			}
		}
	}

	public class Record : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _SecType = string.Empty;

		public string SecType
		{
			get
			{
				return this._SecType;
			}

			set
			{
				if (this._SecType != value)
				{
					this._SecType = value;
					this.OnPropertyChanged("SecType");
				}
			}
		}

		private string _Symbol = string.Empty;

		public string Symbol
		{
			get
			{
				return this._Symbol;
			}

			set
			{
				if (this._Symbol != value)
				{
					this._Symbol = value;
					this.OnPropertyChanged("Symbol");
				}
			}
		}

		private string _CUSIP = string.Empty;

		public string CUSIP
		{
			get
			{
				return this._CUSIP;
			}

			set
			{
				if (this._CUSIP != value)
				{
					this._CUSIP = value;
					this.OnPropertyChanged("CUSIP");
				}
			}
		}

		private string _AssetClass = string.Empty;

		public string AssetClass
		{
			get
			{
				return this._AssetClass;
			}

			set
			{
				if (this._AssetClass != value)
				{
					this._AssetClass = value;
					this.OnPropertyChanged("AssetClass");
				}
			}
		}

		private double _Exchange = 0;

		public double Exchange
		{
			get
			{
				return this._Exchange;
			}

			set
			{
				if (this._Exchange != value)
				{
					this._Exchange = value;
					this.OnPropertyChanged("Exchange");
				}
			}
		}

		private string _RiskCountry = string.Empty;

		public string RiskCountry
		{
			get
			{
				return this._RiskCountry;
			}

			set
			{
				if (this._RiskCountry != value)
				{
					this._RiskCountry = value;
					this.OnPropertyChanged("RiskCountry");
				}
			}
		}

		private string _IssueCountry = string.Empty;

		public string IssueCountry
		{
			get
			{
				return this._IssueCountry;
			}

			set
			{
				if (this._IssueCountry != value)
				{
					this._IssueCountry = value;
					this.OnPropertyChanged("IssueCountry");
				}
			}
		}

		private double _IndustryGroup = 0;

		public double IndustryGroup
		{
			get
			{
				return this._IndustryGroup;
			}

			set
			{
				if (this._IndustryGroup != value)
				{
					this._IndustryGroup = value;
					this.OnPropertyChanged("IndustryGroup");
				}
			}
		}

		private double _IndustrySector = 0;

		public double IndustrySector
		{
			get
			{
				return this._IndustrySector;
			}

			set
			{
				if (this._IndustrySector != value)
				{
					this._IndustrySector = value;
					this.OnPropertyChanged("IndustrySector");
				}
			}
		}
	}

	public class RecordCollection : System.Collections.ObjectModel.ObservableCollection<Record>
	{ 
	}
#endif
}
